1. 下面代码的问题：
func funcMui(x,y int) (sum int,error){
      x+y,nil
}

解析：第二返回值没有命名。

-----------------------------------------------------------------------------------------------

2.new()和make()的区别

解析：
new(T) 和 make(T,args) 是 Go 语言内建函数，用来分配内存，但适用的类型不同。

new(T) 会为 T 类型的新值分配已置零的内存空间，并返回地址（指针），即类型为 *T 的值。换句话说就是，
返回一个指针，该指针指向新分配的、类型为 T 的零值。适用于值类型，如数组、结构体等。

make(T,args) 返回初始化之后的 T 类型的值，这个值并不是 T 类型的零值，也不是指针 *T，
是经过初始化之后的 T 的引用。make() 只适用于 slice、map 和 channel.

-----------------------------------------------------------------------------------------------

3.通过指针变量 p 访问其他成员变量 name，有哪几种方式？
A. p.name B.(&p).name C.(*p).name D. p->name

解析：AC，&取址运算符，*指针解引用

-----------------------------------------------------------------------------------------------

4.关于字符串连接，下面说法正确的是？
A. str:= 'abc'+'123'  B. str := "abc" + "123"  C. srt := 'abc'+ "123"  D. fmt.Sprintf("abc%d",123)

//解析：BD

-----------------------------------------------------------------------------------------------

5.下面代码是否编译通过？
const（
      x = iota
      -
      y
      z = "zz"
      k
      p = iota
      )

func main(){
      fmt.Println(x,y,z,k,p)
}

//解析： 编译通过，输出：0 2 zz zz 5

-----------------------------------------------------------------------------------------------

6.下面赋值正确的是：
A. var x = nil  B. var x interface{} = nil  C. var x string = nil  D. var x error = nil

//解析：BD  nil值只能赋值给指针、chan、func、interface、map、slice


-----------------------------------------------------------------------------------------------

7. 关于init函数，下面说法正确的是：
A. 一个包中，可以包含多个init函数
B. 程序编译时，先执行依赖包的inti函数，再执行main包内的init函数
C. main包中，不能有init函数
D. inti函数可以被其他函数调用

//解析：AB

-----------------------------------------------------------------------------------------------

8. 关于channel，下面语法正确的是：
A. var ch chan int
B. ch := make(chan int)
C. <-ch
D. ch<-

//解析：ABC

-----------------------------------------------------------------------------------------------